/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Dao.DistritoDao;
import Dao.FormandoDao;
import Modelo.Areaespecializacao;
import Modelo.Distrito;
import Modelo.Formador;
import Modelo.Formando;
import Modelo.Localidade;
import Persistencia.AreaespecializacaoJpaController;
import Persistencia.FormadorJpaController;
import Persistencia.LocalidadeJpaController;
import Persistencia.exceptions.IllegalOrphanException;
import Persistencia.exceptions.NonexistentEntityException;
import java.beans.PropertyVetoException;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MASSINGUE
 */
public class GestaoFormador extends javax.swing.JInternalFrame {
    Formador formador=new Formador();

    /**
     * Creates new form GestaoFormador
     */
    public GestaoFormador() {
        try {
            initComponents();
            listarFormandores();
            prenchercomboDistrito();
            prenchercomboDistrito1();
            prenchercombolocal();
        } catch (SQLException ex) {
            Logger.getLogger(GestaoFormador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtPesquisaNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ComboBoxpesquisadistrito = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadeformando = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        botaoEdit = new javax.swing.JButton();
        botaoDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        botaoimprimir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        ComboBoxpesquisadistrito1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ComboBoxpesquisaLocalidade = new javax.swing.JComboBox();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listadeformandoreport = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        botaoimprimir1 = new javax.swing.JButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jTabbedPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTabbedPane1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jPanel9AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtPesquisaNome.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPesquisaNomeCaretUpdate(evt);
            }
        });

        jLabel2.setText("Pesquisar por Nome:");

        ComboBoxpesquisadistrito.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisadistritoItemStateChanged(evt);
            }
        });

        jLabel4.setText("Comunidade:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisadistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisadistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listadeformando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome Completo", "Sexo", "Profissao", "B.I", "Telemovel", "Email", "Morada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadeformando.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadeformandoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listadeformando);
        listadeformando.getColumnModel().getColumn(0).setMinWidth(60);
        listadeformando.getColumnModel().getColumn(0).setPreferredWidth(60);
        listadeformando.getColumnModel().getColumn(0).setMaxWidth(60);
        listadeformando.getColumnModel().getColumn(1).setMinWidth(250);
        listadeformando.getColumnModel().getColumn(1).setPreferredWidth(250);
        listadeformando.getColumnModel().getColumn(1).setMaxWidth(250);
        listadeformando.getColumnModel().getColumn(2).setMinWidth(100);
        listadeformando.getColumnModel().getColumn(2).setPreferredWidth(100);
        listadeformando.getColumnModel().getColumn(2).setMaxWidth(100);
        listadeformando.getColumnModel().getColumn(3).setMinWidth(200);
        listadeformando.getColumnModel().getColumn(3).setPreferredWidth(200);
        listadeformando.getColumnModel().getColumn(3).setMaxWidth(200);
        listadeformando.getColumnModel().getColumn(4).setMinWidth(125);
        listadeformando.getColumnModel().getColumn(4).setPreferredWidth(125);
        listadeformando.getColumnModel().getColumn(4).setMaxWidth(125);
        listadeformando.getColumnModel().getColumn(5).setMinWidth(125);
        listadeformando.getColumnModel().getColumn(5).setPreferredWidth(125);
        listadeformando.getColumnModel().getColumn(5).setMaxWidth(125);
        listadeformando.getColumnModel().getColumn(6).setMinWidth(250);
        listadeformando.getColumnModel().getColumn(6).setPreferredWidth(250);
        listadeformando.getColumnModel().getColumn(6).setMaxWidth(250);
        listadeformando.getColumnModel().getColumn(7).setResizable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(0, 153, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(0, 153, 255));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/novo.png"))); // NOI18N
        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botaoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_45.png"))); // NOI18N
        botaoEdit.setText("Modificar");
        botaoEdit.setEnabled(false);
        botaoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditActionPerformed(evt);
            }
        });

        botaoDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_49.png"))); // NOI18N
        botaoDelete.setText("Eliminar");
        botaoDelete.setEnabled(false);
        botaoDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeleteActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Erase.png"))); // NOI18N
        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        botaoimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/print.png"))); // NOI18N
        botaoimprimir.setText("Imprimir");
        botaoimprimir.setEnabled(false);
        botaoimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(botaoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 595, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(botaoEdit)
                    .addComponent(botaoDelete)
                    .addComponent(botaoimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registo de Formador", jPanel9);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jPanel10AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel11.setBackground(new java.awt.Color(102, 204, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ComboBoxpesquisadistrito1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisadistrito1ItemStateChanged(evt);
            }
        });

        jLabel5.setText("Distrito:");

        jLabel6.setText("Comunidade:");

        ComboBoxpesquisaLocalidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisaLocalidadeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisadistrito1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisaLocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxpesquisaLocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxpesquisadistrito1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listadeformandoreport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome Completo", "Sexo", "Profissao", "B.I", "Telemovel", "Email", "Morada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadeformandoreport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadeformandoreportMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listadeformandoreport);
        listadeformandoreport.getColumnModel().getColumn(0).setMinWidth(60);
        listadeformandoreport.getColumnModel().getColumn(0).setPreferredWidth(60);
        listadeformandoreport.getColumnModel().getColumn(0).setMaxWidth(60);
        listadeformandoreport.getColumnModel().getColumn(1).setMinWidth(250);
        listadeformandoreport.getColumnModel().getColumn(1).setPreferredWidth(250);
        listadeformandoreport.getColumnModel().getColumn(1).setMaxWidth(250);
        listadeformandoreport.getColumnModel().getColumn(2).setMinWidth(100);
        listadeformandoreport.getColumnModel().getColumn(2).setPreferredWidth(100);
        listadeformandoreport.getColumnModel().getColumn(2).setMaxWidth(100);
        listadeformandoreport.getColumnModel().getColumn(3).setMinWidth(200);
        listadeformandoreport.getColumnModel().getColumn(3).setPreferredWidth(200);
        listadeformandoreport.getColumnModel().getColumn(3).setMaxWidth(200);
        listadeformandoreport.getColumnModel().getColumn(4).setMinWidth(125);
        listadeformandoreport.getColumnModel().getColumn(4).setPreferredWidth(125);
        listadeformandoreport.getColumnModel().getColumn(4).setMaxWidth(125);
        listadeformandoreport.getColumnModel().getColumn(5).setMinWidth(125);
        listadeformandoreport.getColumnModel().getColumn(5).setPreferredWidth(125);
        listadeformandoreport.getColumnModel().getColumn(5).setMaxWidth(125);
        listadeformandoreport.getColumnModel().getColumn(6).setMinWidth(250);
        listadeformandoreport.getColumnModel().getColumn(6).setPreferredWidth(250);
        listadeformandoreport.getColumnModel().getColumn(6).setMaxWidth(250);
        listadeformandoreport.getColumnModel().getColumn(7).setResizable(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1264, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel13.setBackground(new java.awt.Color(0, 153, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel14.setBackground(new java.awt.Color(0, 153, 255));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Erase.png"))); // NOI18N
        jButton5.setText("Cancelar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        botaoimprimir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/print.png"))); // NOI18N
        botaoimprimir1.setText("Imprimir");
        botaoimprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoimprimir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoimprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoimprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Lista de Formadores", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisaNomeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPesquisaNomeCaretUpdate
        listarFormandor();
    }//GEN-LAST:event_txtPesquisaNomeCaretUpdate

    private void ComboBoxpesquisadistritoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisadistritoItemStateChanged
       
           
            listarFormandoresdistrito();
        
    }//GEN-LAST:event_ComboBoxpesquisadistritoItemStateChanged

    private void listadeformandoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadeformandoMouseClicked
//
        int selecionado=listadeformando.getSelectedRow();
        int idEmp=Integer.valueOf(listadeformando.getValueAt(selecionado, 0).toString());

        formador=new FormadorJpaController().findFormador(idEmp);
        botaoDelete.setEnabled(true);
        botaoEdit.setEnabled(true);
        botaoimprimir.setEnabled(true);
//        // JOptionPane.showMessageDialog(null, emp.getIdformando());

    }//GEN-LAST:event_listadeformandoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new CadastrarFormador(null, true).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botaoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditActionPerformed
        new ModificarFormador(formador).setVisible(true);
       //  new ModificarCandidato(emp).setVisible(true);
    }//GEN-LAST:event_botaoEditActionPerformed

    private void botaoDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeleteActionPerformed
//        //          String msg = "Selecciona o Formando primeiro?";
//        //        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
//        //        if (resp == JOptionPane.YES_OPTION){
//         String msg = "Deseja Realmente Eliminar O Candidato?";
//        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
//        if (resp == JOptionPane.YES_OPTION){
//            // try {             
//                 int selecionado=listadeformando.getSelectedRow();
//                             int nr=0;
//                             nr=Integer.valueOf(listadeformando.getValueAt(selecionado, 0).toString());
//                           //  Formador f=new FormadorJpaController().findFormador(nr);
//                            // FormandoDao dao=new FormandoDao();
//                             FormadorJpaController jpa=new FormadorJpaController();
//             try {
//                 // f.setIdformador(nr);
//                  jpa.destroy(nr);
//             } catch (NonexistentEntityException ex) {
//                 Logger.getLogger(GestaoFormador.class.getName()).log(Level.SEVERE, null, ex);
//             }
//                             JOptionPane.showMessageDialog(null, "Formador Eliminado Com Sucesso");
//                             listarFormandores();
//             }
//             //            eliminarCandidato();
//             //            listarFormandos();
//             //        }
//           // } 
// 
//
////            eliminarCandidato();
////            listarFormandos();

            //        }
    }//GEN-LAST:event_botaoDeleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void botaoimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoimprimirActionPerformed
        List<Formador> formadores = new ArrayList<Formador>();
        Formador le = new FormadorJpaController().findFormador(formador.getIdformador());
        formadores.add(le);
        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(formadores);
        // String path = "/relatorios/recibov.jasper";
        JasperPrint jpPrint = null;
        JasperViewer jv;
        Map par = new HashMap<>();
        // par.put("tf", total);
        Areaespecializacao ae = new AreaespecializacaoJpaController().findAreaespecializacao(le.getIdformador());
       String a1 = ""; if(ae.getIdarea1()!=null)a1=ae.getIdarea1().getEspecializacao();
       String a2 = ""; if(ae.getIdarea2()!=null)a2=ae.getIdarea2().getEspecializacao();
       String a3 = ""; if(ae.getIdarea3()!=null)a3=ae.getIdarea3().getEspecializacao();
         par.put("area1", a1);
         par.put("area2", a2);
         par.put("area3", a3);

        // String path = "C:\\Users\\MASSINGUE\\Documents\\NetBeansProjects\\TREE\\src\\Relatorio\\fichadoformador.jasper";
        String path = new File("Relatorio/fichadoformador.jasper").getAbsolutePath();
        try {
            jpPrint = JasperFillManager.fillReport(path,par, ds);//new metodos.ControllerAcess().conetion());
        } catch (JRException ex) {
            Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
        }
        jv = new JasperViewer(jpPrint, false); //O false eh para nao fechar a aplicacao
        JDialog viewer = new JDialog(new javax.swing.JFrame(), "Caracterizacao do Mentor", true);
        viewer.setSize(1024, 768);
        viewer.setLocationRelativeTo(null);
        viewer.getContentPane().add(jv.getContentPane());
        viewer.setVisible(true);
    }//GEN-LAST:event_botaoimprimirActionPerformed

    private void jTabbedPane1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTabbedPane1AncestorAdded
        
    }//GEN-LAST:event_jTabbedPane1AncestorAdded

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
       
    }//GEN-LAST:event_formAncestorAdded

    private void jPanel9AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanel9AncestorAdded
        try {
            this.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(GestaoFormador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel9AncestorAdded

    private void ComboBoxpesquisadistrito1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisadistrito1ItemStateChanged
        listarFormandoresdis();
    }//GEN-LAST:event_ComboBoxpesquisadistrito1ItemStateChanged

    private void listadeformandoreportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadeformandoreportMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listadeformandoreportMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void botaoimprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoimprimir1ActionPerformed
        List<Formador> formandos = new FormadorJpaController().formadorLocalidade(ComboBoxpesquisaLocalidade.getSelectedIndex()+1);
         JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(formandos);
        // String path = "/relatorios/recibov.jasper";
         JasperPrint jpPrint = null;
         JasperViewer jv;
         Map par = new HashMap<>();
        // par.put("tf", total);

      // String path = "C:\\Users\\MASSINGUE\\Documents\\NetBeansProjects\\TREE\\src\\Relatorio\\reportarformadores.jasper";
         String path2=new File("Icone/logoKOIKA.png").getAbsolutePath();
         par.put("img", path2);
         String path = new File("Relatorio/reportarformadores.jasper").getAbsolutePath();
        try {
            jpPrint = JasperFillManager.fillReport(path, par, ds);//new metodos.ControllerAcess().conetion());
        } catch (JRException ex) {
            Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
        }
        jv = new JasperViewer(jpPrint, false); //O false eh para nao fechar a aplicacao
        JDialog viewer = new JDialog(new javax.swing.JFrame(), "Lista de Formadores", true);
        viewer.setSize(1024, 768);
        viewer.setLocationRelativeTo(null);
        viewer.getContentPane().add(jv.getContentPane());
        viewer.setVisible(true);
    }//GEN-LAST:event_botaoimprimir1ActionPerformed

    private void jPanel10AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanel10AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel10AncestorAdded

    private void ComboBoxpesquisaLocalidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisaLocalidadeItemStateChanged
        listarFormandoreslocal();
    }//GEN-LAST:event_ComboBoxpesquisaLocalidadeItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBoxpesquisaLocalidade;
    private javax.swing.JComboBox ComboBoxpesquisadistrito;
    private javax.swing.JComboBox ComboBoxpesquisadistrito1;
    private javax.swing.JButton botaoDelete;
    private javax.swing.JButton botaoEdit;
    private javax.swing.JButton botaoimprimir;
    private javax.swing.JButton botaoimprimir1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable listadeformando;
    private javax.swing.JTable listadeformandoreport;
    private javax.swing.JTextField txtPesquisaNome;
    // End of variables declaration//GEN-END:variables

    private void prenchercomboDistrito() throws SQLException {
       
             List<Distrito> distritos = new DistritoDao().mostrarDistritos();
                ComboBoxpesquisadistrito.removeAllItems();
                for (Distrito d : distritos) {
                         ComboBoxpesquisadistrito.addItem(d);
               }
               
                   
       
    }
    
     private void prenchercomboDistrito1() throws SQLException {
       
             List<Distrito> distritos = new DistritoDao().mostrarDistritos();
                ComboBoxpesquisadistrito1.removeAllItems();
                for (Distrito d : distritos) {
                         ComboBoxpesquisadistrito1.addItem(d);
               }
               
                   
       
    }
    
     private void prenchercombolocal() throws SQLException {
       
             List<Localidade> local=new LocalidadeJpaController().findLocalidadeEntities();
                ComboBoxpesquisaLocalidade.removeAllItems();
                for (Localidade d : local) {
                         ComboBoxpesquisaLocalidade.addItem(d);
               }
               
                   
       
    }
    
    
    
    
    public void listarFormandores() {
                     
           
            List<Formador> formadores =new FormadorJpaController().findFormadorEntities();
           
                DefaultTableModel tbm=(DefaultTableModel) listadeformando.getModel();
                
                for (int i = tbm.getRowCount()-1; i >= 0; i--) {
                    tbm.removeRow(i);
                }
                int i=0;
                for (Formador f  : formadores) {
                    tbm.addRow(new String[1]);
                    
                    listadeformando.setValueAt(f.getIdformador(), i, 0);
                    listadeformando.setValueAt(f.getFormador(), i, 1);
                    if(f.getSexo()==true){
                        listadeformando.setValueAt("Masculino", i, 2);}
                    else{
                       listadeformando.setValueAt("Femenino", i, 2);
                    }
//                     listadeformando.setValueAt(f.getSexo(), i, 2);
                    listadeformando.setValueAt(f.getProfissao(), i, 3);
                    listadeformando.setValueAt(f.getBi(), i, 4);
                    listadeformando.setValueAt(f.getTelemovel(), i, 5);
                    
                    listadeformando.setValueAt(f.getEmail(), i, 6);
                    listadeformando.setValueAt(f.getMorada(), i, 7);
                    
                    
                    i++;
        }
       
    }  
    
     public void listarFormandoresdistrito() {
                     
           
            List<Formador> formadores =new FormadorJpaController().formadorDistrito(((Distrito)ComboBoxpesquisadistrito.getSelectedItem()).getIddistrito());
           
                DefaultTableModel tbm=(DefaultTableModel) listadeformando.getModel();
                
                for (int i = tbm.getRowCount()-1; i >= 0; i--) {
                    tbm.removeRow(i);
                }
                int i=0;
                for (Formador f  : formadores) {
                    tbm.addRow(new String[1]);
                    
                    listadeformando.setValueAt(f.getIdformador(), i, 0);
                    listadeformando.setValueAt(f.getFormador(), i, 1);
                    if(f.getSexo()==true){
                        listadeformando.setValueAt("Masculino", i, 2);}
                    else{
                       listadeformando.setValueAt("Femenino", i, 2);
                    }
//                     listadeformando.setValueAt(f.getSexo(), i, 2);
                    listadeformando.setValueAt(f.getProfissao(), i, 3);
                    listadeformando.setValueAt(f.getBi(), i, 4);
                    listadeformando.setValueAt(f.getTelemovel(), i, 5);
                    
                    listadeformando.setValueAt(f.getEmail(), i, 6);
                    listadeformando.setValueAt(f.getMorada(), i, 7);
                    
                    
                    i++;
        }
       
    }  
     
     
     
      public void listarFormandor() {
                     
           
            List<Formador> formadores =new FormadorJpaController().getformandor("%"+txtPesquisaNome.getText()+"%");
           
                DefaultTableModel tbm=(DefaultTableModel) listadeformando.getModel();
                
                for (int i = tbm.getRowCount()-1; i >= 0; i--) {
                    tbm.removeRow(i);
                }
                int i=0;
                for (Formador f  : formadores) {
                    tbm.addRow(new String[1]);
                    
                    listadeformando.setValueAt(f.getIdformador(), i, 0);
                    listadeformando.setValueAt(f.getFormador(), i, 1);
                    if(f.getSexo()==true){
                        listadeformando.setValueAt("Masculino", i, 2);}
                    else{
                       listadeformando.setValueAt("Femenino", i, 2);
                    }
//                     listadeformando.setValueAt(f.getSexo(), i, 2);
                    listadeformando.setValueAt(f.getProfissao(), i, 3);
                    listadeformando.setValueAt(f.getBi(), i, 4);
                    listadeformando.setValueAt(f.getTelemovel(), i, 5);
                    
                    listadeformando.setValueAt(f.getEmail(), i, 6);
                    listadeformando.setValueAt(f.getMorada(), i, 7);
                    
                    
                    i++;
        }
       
    } 
      
       public void listarFormandoreslocal() {
                     
           
            List<Formador> formadores =new FormadorJpaController().formadorLocalidade(ComboBoxpesquisaLocalidade.getSelectedIndex()+1);
           
                DefaultTableModel tbm=(DefaultTableModel) listadeformandoreport.getModel();
                
                for (int i = tbm.getRowCount()-1; i >= 0; i--) {
                    tbm.removeRow(i);
                }
                int i=0;
                for (Formador f  : formadores) {
                    tbm.addRow(new String[1]);
                    
                    listadeformandoreport.setValueAt(f.getIdformador(), i, 0);
                    listadeformandoreport.setValueAt(f.getFormador(), i, 1);
                    if(f.getSexo()==true){
                        listadeformandoreport.setValueAt("Masculino", i, 2);}
                    else{
                       listadeformandoreport.setValueAt("Femenino", i, 2);
                    }
//                     listadeformando.setValueAt(f.getSexo(), i, 2);
                    listadeformandoreport.setValueAt(f.getProfissao(), i, 3);
                    listadeformandoreport.setValueAt(f.getBi(), i, 4);
                    listadeformandoreport.setValueAt(f.getTelemovel(), i, 5);
                    
                    listadeformandoreport.setValueAt(f.getEmail(), i, 6);
                    listadeformandoreport.setValueAt(f.getMorada(), i, 7);
                    
                    
                    i++;
        }
       
    }  
   public void listarFormandoresdis() {
                     
           
            List<Formador> formadores =new FormadorJpaController().formadorDistrito(ComboBoxpesquisadistrito1.getSelectedIndex()+1);
           
                DefaultTableModel tbm=(DefaultTableModel) listadeformandoreport.getModel();
                
                for (int i = tbm.getRowCount()-1; i >= 0; i--) {
                    tbm.removeRow(i);
                }
                int i=0;
                for (Formador f  : formadores) {
                    tbm.addRow(new String[1]);
                    
                    listadeformandoreport.setValueAt(f.getIdformador(), i, 0);
                    listadeformandoreport.setValueAt(f.getFormador(), i, 1);
                    if(f.getSexo()==true){
                        listadeformandoreport.setValueAt("Masculino", i, 2);}
                    else{
                       listadeformandoreport.setValueAt("Femenino", i, 2);
                    }
//                     listadeformando.setValueAt(f.getSexo(), i, 2);
                    listadeformandoreport.setValueAt(f.getProfissao(), i, 3);
                    listadeformandoreport.setValueAt(f.getBi(), i, 4);
                    listadeformandoreport.setValueAt(f.getTelemovel(), i, 5);
                    
                    listadeformandoreport.setValueAt(f.getEmail(), i, 6);
                    listadeformandoreport.setValueAt(f.getMorada(), i, 7);
                    
                    
                    i++;
        }
       
    }    
}
