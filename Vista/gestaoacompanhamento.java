/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Dao.DistritoDao;
import Dao.FormandoDao;
import Dao.LocalidadeDao;
import Modelo.Areadeformacao;
import Modelo.Curso;
import Modelo.Distrito;
import Modelo.Finscritos;
import Modelo.Formando;
import Modelo.Localidade;
import Modelo.Relactividadeprof;
import Modelo.Relestadocivil;
import Modelo.Relformandoarea;
import Persistencia.AreadeformacaoJpaController;
import Persistencia.CursoJpaController;
import Persistencia.DistritoJpaController;
import Persistencia.FinscritosJpaController;
import Persistencia.FormandoJpaController;
import Persistencia.LocalidadeJpaController;
import Persistencia.exceptions.IllegalOrphanException;
import Persistencia.exceptions.NonexistentEntityException;
import Persistencia.exceptions.PreexistingEntityException;
import java.awt.Image;
import java.beans.PropertyVetoException;
import java.io.File;
import java.sql.SQLException;
import java.text.BreakIterator;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import metodo.RelatorioCtr;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MASSINGUE
 */
public class gestaoacompanhamento extends javax.swing.JInternalFrame {

    Formando formando = new Formando();
    Curso curso = new Curso();

    /**
     * Creates new form GerirFormando
     */
    public gestaoacompanhamento() {
        
            initComponents();
//            prenchercomboDistrito();
//            prenchercomboLocalidade();
//            listarFormandos();
//            prenchercomboLocalidades();
//            prenchercomboLocalidadess();
//            prenchercomboLocalidade2();
//            prenchercomboDistrito2();
//            prenchercomboArea();
//            prenchercomboLocalidadespr();
//            prenchercomboDistritopri();
//            prenchercomboLocalidadespr2();
//            prenchercomboDistritopri2();
//             prenchercomboLocalidadespr3();
//            prenchercomboDistritopri3();
//            prenchercomboArea1();
//            prenchercomboArea3();
           
          //11  prenchercomboLocalidade3();
     //11       prenchercomboDistrito3();
//            prenchercomboDistrito1();
//           // prenchercomboLocalidade1();
//            listarmapainscritos();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtPesquisaNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ComboBoxpesquisadistrito = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ComboBoxpesquisalocalidade = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadeformando = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        botaoEdit = new javax.swing.JButton();
        botaoDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        botaprevisualizar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listadeformandolocalidade1 = new javax.swing.JTable();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        ComboBoxpesquisadistrito2 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ComboBoxpesquisalocalidade2 = new javax.swing.JComboBox();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseReleased(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(102, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtPesquisaNome.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPesquisaNomeCaretUpdate(evt);
            }
        });

        jLabel2.setText("Pesquisar por Nome:");

        ComboBoxpesquisadistrito.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisadistritoItemStateChanged(evt);
            }
        });

        jLabel4.setText("Distrito:");

        jLabel6.setText("Comunidade:");

        ComboBoxpesquisalocalidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisalocalidadeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisadistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(ComboBoxpesquisalocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(732, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisadistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisalocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listadeformando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero", "Nome Completo", "Sexo", "Idade", "Comunidade", "Distrito", "Curso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadeformando.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadeformandoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listadeformando);
        listadeformando.getColumnModel().getColumn(5).setHeaderValue("Distrito");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1324, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 153, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(0, 153, 255));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/novo.png"))); // NOI18N
        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botaoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_45.png"))); // NOI18N
        botaoEdit.setText("Modificar");
        botaoEdit.setEnabled(false);
        botaoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditActionPerformed(evt);
            }
        });

        botaoDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_49.png"))); // NOI18N
        botaoDelete.setText("Eliminar");
        botaoDelete.setEnabled(false);
        botaoDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeleteActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Erase.png"))); // NOI18N
        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        botaprevisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/print.png"))); // NOI18N
        botaprevisualizar.setText("Imprimir");
        botaprevisualizar.setEnabled(false);
        botaprevisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaprevisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaprevisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 653, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botaprevisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(botaoEdit)
                        .addComponent(botaoDelete))))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registo de Candidatos", jPanel9);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listadeformandolocalidade1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Sexo", "Idade", "E.Civil", "Comunidade", "Nr Agregado", "H.Literarias", "Contacto", "A.Actvidade", "N.Empregado", "Curso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadeformandolocalidade1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadeformandolocalidade1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listadeformandolocalidade1);
        listadeformandolocalidade1.getColumnModel().getColumn(1).setHeaderValue("Sexo");
        listadeformandolocalidade1.getColumnModel().getColumn(3).setHeaderValue("E.Civil");
        listadeformandolocalidade1.getColumnModel().getColumn(5).setHeaderValue("Nr Agregado");
        listadeformandolocalidade1.getColumnModel().getColumn(8).setHeaderValue("A.Actvidade");
        listadeformandolocalidade1.getColumnModel().getColumn(9).setHeaderValue("N.Empregado");
        listadeformandolocalidade1.getColumnModel().getColumn(10).setResizable(false);
        listadeformandolocalidade1.getColumnModel().getColumn(10).setHeaderValue("Curso");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel23.setBackground(new java.awt.Color(0, 153, 255));
        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel24.setBackground(new java.awt.Color(0, 153, 255));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/print.png"))); // NOI18N
        jButton7.setText("Imprimir");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 843, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jButton7))
        );

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 35, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        jPanel21.setBackground(new java.awt.Color(102, 204, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ComboBoxpesquisadistrito2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisadistrito2ItemStateChanged(evt);
            }
        });

        jLabel8.setText("Distrito:");

        jLabel9.setText("Comunidade:");

        ComboBoxpesquisalocalidade2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisalocalidade2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisadistrito2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(ComboBoxpesquisalocalidade2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxpesquisadistrito2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisalocalidade2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lista de Formandos", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        try {
            this.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(gestaoacompanhamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formAncestorAdded

    private void jTabbedPane1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseReleased
//        if (jTabbedPane1.getSelectedIndex() == 2) {
//            try {
//                prenchercomboDistrito1();
//            } catch (SQLException ex) {
//                Logger.getLogger(gestaoacompanhamento.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            try {
//                prenchercomboLocalidade1();
//            } catch (SQLException ex) {
//                Logger.getLogger(gestaoacompanhamento.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            listarRelatorioFormandos();
//        }
        //////        else
        //////        if (jTabbedPane1.getSelectedIndex() == 3) {
            //////            try {
                //////                prenchercomboArea();
                //////            } catch (SQLException ex) {
                //////                Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
                //////            }
            //////        }
    }//GEN-LAST:event_jTabbedPane1MouseReleased

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void ComboBoxpesquisalocalidade2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisalocalidade2ItemStateChanged
//        listarRelatorioFormandos2();
    }//GEN-LAST:event_ComboBoxpesquisalocalidade2ItemStateChanged

    private void ComboBoxpesquisadistrito2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisadistrito2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxpesquisadistrito2ItemStateChanged

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        List<Formando> formandos = new FormandoJpaController().getRelatorioFormando(ComboBoxpesquisalocalidade2.getSelectedIndex()+1);
        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(formandos);
        // String path = "/relatorios/recibov.jasper";
        JasperPrint jpPrint = null;
        JasperViewer jv;
        Map par = new HashMap<>();
        // par.put("tf", total);

        // String path = "C:\\Users\\MASSINGUE\\Documents\\NetBeansProjects\\TREE\\src\\Relatorio\\ListadeFormando.jasper";
        String path2=new File("Icone/logoKOIKA.png").getAbsolutePath();
        par.put("img", path2);
        String path = new File("Relatorio/ListadeFormando.jasper").getAbsolutePath();
        try {
            jpPrint = JasperFillManager.fillReport(path, par, ds);//new metodos.ControllerAcess().conetion());
        } catch (JRException ex) {
            Logger.getLogger(gestaoacompanhamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        jv = new JasperViewer(jpPrint, false); //O false eh para nao fechar a aplicacao
        JDialog viewer = new JDialog(new javax.swing.JFrame(), "Lista de Formandos", true);
        viewer.setSize(1024, 768);
        viewer.setLocationRelativeTo(null);
        viewer.getContentPane().add(jv.getContentPane());
        viewer.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void listadeformandolocalidade1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadeformandolocalidade1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listadeformandolocalidade1MouseClicked

    private void botaprevisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaprevisualizarActionPerformed
        //  new DadosFormando(formando).setVisible(true);

        List<Formando> formandos = new ArrayList<Formando>();
        formandos.add(formando);
        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(formandos);
        // String path = "/relatorios/recibov.jasper";
        JasperPrint jpPrint = null;
        JasperViewer jv;
        Map par = new HashMap<>();
        // par.put("tf", total);

        // String path = "C:\\Users\\MASSINGUE\\Documents\\NetBeansProjects\\TREE\\src\\Relatorio\\Dadosformando.jasper";
        String path = new File("Relatorio/Dadosformando.jasper").getAbsolutePath();
        String path2=new File("Icone/logoKOIKA.png").getAbsolutePath();
        par.put("img", path2);
        try {
            jpPrint = JasperFillManager.fillReport(path, par, ds);//new metodos.ControllerAcess().conetion());
        } catch (JRException ex) {
            Logger.getLogger(gestaoacompanhamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        jv = new JasperViewer(jpPrint, false); //O false eh para nao fechar a aplicacao
        JDialog viewer = new JDialog(new javax.swing.JFrame(), "Lista de Formandos", true);
        viewer.setSize(1024, 768);
        viewer.setLocationRelativeTo(null);
        viewer.getContentPane().add(jv.getContentPane());
        viewer.setVisible(true);
    }//GEN-LAST:event_botaprevisualizarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void botaoDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeleteActionPerformed
        //          String msg = "Selecciona o Formando primeiro?";
        //        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
        //        if (resp == JOptionPane.YES_OPTION){

//            eliminarCandidato();
//            listarFormandos();

            //        }
    }//GEN-LAST:event_botaoDeleteActionPerformed

    private void botaoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditActionPerformed
        new ModificarFormando(formando).setVisible(true);
        // new ModificarCandidato(emp).setVisible(true);
    }//GEN-LAST:event_botaoEditActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new CadastrarFormando(null, true).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void listadeformandoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadeformandoMouseClicked

        int selecionado = listadeformando.getSelectedRow();
        int idEmp = Integer.valueOf(listadeformando.getValueAt(selecionado, 0).toString());

        formando = new FormandoJpaController().findFormando(idEmp);
        botaoDelete.setEnabled(true);
        botaoEdit.setEnabled(true);
        botaprevisualizar.setEnabled(true);
        // JOptionPane.showMessageDialog(null, emp.getIdformando());

    }//GEN-LAST:event_listadeformandoMouseClicked

    private void ComboBoxpesquisalocalidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisalocalidadeItemStateChanged
//        listarFormandosLocalidade();
    }//GEN-LAST:event_ComboBoxpesquisalocalidadeItemStateChanged

    private void ComboBoxpesquisadistritoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisadistritoItemStateChanged
//        try {
//            prenchercomboLocalidade();
//            listarFormandosDistrito();
//        } catch (SQLException ex) {
//            Logger.getLogger(GestaoFormando.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_ComboBoxpesquisadistritoItemStateChanged

    private void txtPesquisaNomeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPesquisaNomeCaretUpdate
//        listarFormando();
    }//GEN-LAST:event_txtPesquisaNomeCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBoxpesquisadistrito;
    private javax.swing.JComboBox ComboBoxpesquisadistrito2;
    private javax.swing.JComboBox ComboBoxpesquisalocalidade;
    private javax.swing.JComboBox ComboBoxpesquisalocalidade2;
    private javax.swing.JButton botaoDelete;
    private javax.swing.JButton botaoEdit;
    private javax.swing.JButton botaprevisualizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable listadeformando;
    private javax.swing.JTable listadeformandolocalidade1;
    private javax.swing.JTextField txtPesquisaNome;
    // End of variables declaration//GEN-END:variables

//    private void prenchercomboDistrito() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito.removeAllItems();
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito.addItem(d);
//        }
//
//
//
//    }
//    
//    
//    private void prenchercomboDistrito2() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito2.removeAllItems();
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito2.addItem(d);
//        }
//    }
////      private void prenchercomboDistrito7() throws SQLException {
////
////        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
////        ComboBoxpesquisadistrito7.removeAllItems();
////        for (Distrito d : distritos) {
////            ComboBoxpesquisadistrito7.addItem(d);
////        }
////
////
////
////    }
////    private void prenchercomboDistrito6() throws SQLException {
////
////        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
////        ComboBoxpesquisadistrito6.removeAllItems();
////        for (Distrito d : distritos) {
////            ComboBoxpesquisadistrito6.addItem(d);
////        }
////
////
////
////    }
//    
////     private void prenchercomboLocalidades6() throws SQLException {
////
////        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
////        ComboBoxpesquisalocalidade6.removeAllItems();
////        for (Localidade p : comunidades) {
////            ComboBoxpesquisalocalidade6.addItem(p);
////        }
////
////
////
////    }
////      private void prenchercomboLocalidades7() throws SQLException {
////
////        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
////        ComboBoxpesquisalocalidade7.removeAllItems();
////        for (Localidade p : comunidades) {
////            ComboBoxpesquisalocalidade7.addItem(p);
////        }
////
////
////
////    }
//    
//
////      private void prenchercomboPosto() throws SQLException {
////       
////             List<Posto> distritos = new PostoDao().mostrarPosto(ComboBoxpesquisadistrito.getSelectedIndex()+1);
////                ComboBoxpesquisaposto.removeAllItems();
////                for (Posto p : distritos) {
////                         ComboBoxpesquisaposto.addItem(p.getPosto());
////               }
////               
////                   
////       
////    }
//    private void prenchercomboLocalidades() throws SQLException {
//
//        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        ComboBoxpesquisalocalidade.removeAllItems();
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade.addItem(p);
//        }
//
//
//
//    }
//    
//    private void prenchercomboLocalidade1() throws SQLException {
//        List<Localidade> comunidades = new ArrayList<Localidade>();
//        if (ComboBoxpesquisadistrito1.getSelectedIndex() != 0) {
//            comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        }
//        ComboBoxpesquisalocalidade1.removeAllItems();
//        //ComboBoxpesquisalocalidade1.addItem("--Localidade--");
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade1.addItem(p);
//        }
//    }
//    
//     private void prenchercomboLocalidade2() throws SQLException {
//        List<Localidade> comunidades = new ArrayList<Localidade>();
//        if (ComboBoxpesquisadistrito2.getSelectedIndex() != 0) {
//            comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        }
//        ComboBoxpesquisalocalidade2.removeAllItems();
//        //ComboBoxpesquisalocalidade1.addItem("--Localidade--");
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade2.addItem(p);
//        }
//    }
//
//    private void prenchercomboLocalidade() throws SQLException {
//
//        List<Localidade> comunidades = new LocalidadeJpaController().getloLocalidades(ComboBoxpesquisadistrito.getSelectedIndex()+1);
//        ComboBoxpesquisalocalidade.removeAllItems();
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade.addItem(p);
//        }
//
//
//
//    }
//
//    private void prenchercomboLocalidadess() throws SQLException {
//
//        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        ComboBoxpesquisalocalidade1.removeAllItems();
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade1.addItem(p);
//        }
//
//
//
//    }
//    
//    private void prenchercomboDistrito1() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito1.removeAllItems();
//        ComboBoxpesquisadistrito1.addItem("--Distrito--");
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito1.addItem(d);
//        }
//        if (!distritos.isEmpty()) {
//            ComboBoxpesquisadistrito1.setSelectedIndex(0);
//        }
//
//    }
//
//    public void listarFormando() {
//        try {
//
//            List<Formando> formandos = new FormandoDao().listarFormandopesquisado("%" + txtPesquisaNome.getText() + "%");
//
//            DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
//
//            for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//                tbm.removeRow(i);
//            }
//            int i = 0;
//            for (Formando f : formandos) {
//                tbm.addRow(new String[1]);
//
//                listadeformando.setValueAt(f.getIdformando(), i, 0);
//                listadeformando.setValueAt(f.getNome(), i, 1);
//                if (f.getSexo() == true) {
//                    listadeformando.setValueAt("Masculino", i, 2);
//                } else {
//                    listadeformando.setValueAt("Femenino", i, 2);
//                }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//                listadeformando.setValueAt(f.getIdade(), i, 3);
//                listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//                listadeformando.setValueAt(f.getOutrahabilidades(), i, 5);
//
//                listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
//
//
//                i++;
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(GestaoFormando.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//
//    }
//
//    public void listarFormandos() {
//
//
//        List<Formando> formandos = new FormandoJpaController().findFormandoEntities();
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformando.setValueAt(f.getIdformando(), i, 0);
//            listadeformando.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformando.setValueAt("Masculino", i, 2);
//            } else {
//                listadeformando.setValueAt("Feminino", i, 2);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformando.setValueAt(f.getIdade(), i, 3);
//            listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
//            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());
//
//            listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
//
//
//            i++;
//        }
//
//    }
//
//    public void listarFormandosDistrito() {
//
//
//        List<Formando> formandos = new FormandoJpaController().formandoDistrito(((Distrito) ComboBoxpesquisadistrito.getSelectedItem()).getIddistrito());
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformando.setValueAt(f.getIdformando(), i, 0);
//            listadeformando.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformando.setValueAt("Masculino", i, 2);
//            } else {
//                listadeformando.setValueAt("Feminino", i, 2);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformando.setValueAt(f.getIdade(), i, 3);
//            listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
//            listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
//
//
//            i++;
//        }
//
//
//
//    }
//
//    public void listarFormandosLocalidade() {
//
////            JOptionPane.showMessageDialog(null, closable);
////        List<Formando> formandos = new FormandoJpaController().formandoLocalidade(ComboBoxpesquisalocalidade.getSelectedIndex()+1);
////
////        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
////
////        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
////            tbm.removeRow(i);
////        }
////        int i = 0;
////        for (Formando f : formandos) {
////            tbm.addRow(new String[1]);
////
////            listadeformando.setValueAt(f.getIdformando(), i, 0);
////            listadeformando.setValueAt(f.getNome(), i, 1);
////            if (f.getSexo() == true) {
////   marca             listadeformando.setValueAt("Masculino", i, 2);
////            } else {
////                listadeformando.setValueAt("Feminino", i, 2);
////            }
//////                     listadeformando.setValueAt(f.getSexo(), i, 2);
////            listadeformando.setValueAt(f.getIdade(), i, 3);
////            listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
////            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
////            listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
////
////
////            i++;
////        }
////
////
//
//    }
//
////          private void prenchercomboDistrito1() throws SQLException {
////       
////             List<Distrito> distritos = new DistritoDao().mostrarDistritos();
////                ComboBoxpesquisadistrito1.removeAllItems();
////                for (Distrito d : distritos) {
////                         ComboBoxpesquisadistrito1.addItem(d.getDistrito());
////               }
////               
////                   
////       
////    }
////      private void prenchercomboPosto() throws SQLException {
////       
////             List<Posto> distritos = new PostoDao().mostrarPosto(ComboBoxpesquisadistrito.getSelectedIndex()+1);
////                ComboBoxpesquisaposto.removeAllItems();
////                for (Posto p : distritos) {
////                         ComboBoxpesquisaposto.addItem(p.getPosto());
////               }
////               
////                   
////       
////    }
////      
////       private void prenchercomboLocalidade1() throws SQLException {
////       
////             List<Localidade> comunidades = new LocalidadeDao().mostrarLocalidade(ComboBoxpesquisadistrito.getSelectedIndex()+1);
////                ComboBoxpesquisalocalidade1.removeAllItems();
////                for (Localidade p : comunidades) {
////                         ComboBoxpesquisalocalidade1.addItem(p.getLocalidade());
////               }
////               
////                   
////       
////    }
//    
//
//    private void eliminarCandidato() {
//        String msg = "Deseja Realmente Eliminar O Candidato?";
//        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
//        if (resp == JOptionPane.YES_OPTION) {
//            try {
//                int selecionado = listadeformando.getSelectedRow();
//                int nr = 0;
//                nr = Integer.valueOf(listadeformando.getValueAt(selecionado, 0).toString());
//                Formando f = new FormandoJpaController().findFormando(nr);
//                FormandoDao dao = new FormandoDao();
//                FormandoJpaController jpa = new FormandoJpaController();
//                f.setIdformando(nr);
//                dao.destroy(f);
//                JOptionPane.showMessageDialog(null, "Formando Eliminado Com Sucesso");
//                listarFormandos();
//            } catch (SQLException ex) {
//                Logger.getLogger(gestaoacompanhamento.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//        }
//
//
//    }
//
//    public void listarRelatorioFormandos() {
//
//       // JOptionPane.showMessageDialog(null, closable);
//        Distrito d = null;
//        if (ComboBoxpesquisadistrito1.getSelectedIndex() != 0) {
//            d = (Distrito) ComboBoxpesquisadistrito1.getSelectedItem();
//        }
//        Localidade l = null;
//        if (ComboBoxpesquisalocalidade1.getSelectedIndex() != 0) {
//            l = (Localidade) ComboBoxpesquisalocalidade1.getSelectedItem();
//        }
//        List<Formando> formandos = new FormandoJpaController().getRelatorioFormando(ComboBoxpesquisalocalidade1.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandolocalidade.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformandolocalidade.setValueAt(f.getNome(), i, 0);
//           // listadeformandolocalidade.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformandolocalidade.setValueAt("Masculino", i, 1);
//            } else {
//                listadeformandolocalidade.setValueAt("Femenino", i, 1);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandolocalidade.setValueAt(f.getIdade(), i, 2);
//            listadeformandolocalidade.setValueAt(f.getIdestadocivil().getEstado(), i, 3);
//            listadeformandolocalidade.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformandolocalidade.setValueAt(f.getNragregado(), i, 5);
//            listadeformandolocalidade.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 6);
//             listadeformandolocalidade.setValueAt(f.getAreaactividade(), i, 8);
//            listadeformandolocalidade.setValueAt(f.getEmpregador(), i, 9);
//            listadeformandolocalidade.setValueAt(f.getIdcurso().getCurso(), i, 10);
//
//
//            i++;
//        }
//
//
//
//    }
//    
//    
//     public void listarRelatorioFormandos2() {
//
//       // JOptionPane.showMessageDialog(null, closable);
//        Distrito d = null;
//        if (ComboBoxpesquisadistrito1.getSelectedIndex() != 0) {
//            d = (Distrito) ComboBoxpesquisadistrito1.getSelectedItem();
//        }
//        Localidade l = null;
//        if (ComboBoxpesquisalocalidade1.getSelectedIndex() != 0) {
//            l = (Localidade) ComboBoxpesquisalocalidade1.getSelectedItem();
//        }
//        List<Formando> formandos = new FormandoJpaController().getRelatorioFormando(ComboBoxpesquisalocalidade2.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandolocalidade1.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformandolocalidade1.setValueAt(f.getNome(), i, 0);
//           // listadeformandolocalidade.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformandolocalidade1.setValueAt("Masculino", i, 1);
//            } else {
//                listadeformandolocalidade1.setValueAt("Femenino", i, 1);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandolocalidade1.setValueAt(f.getIdade(), i, 2);
//            listadeformandolocalidade1.setValueAt(f.getIdestadocivil().getEstado(), i, 3);
//            listadeformandolocalidade1.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformandolocalidade1.setValueAt(f.getNragregado(), i, 5);
//            listadeformandolocalidade1.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 6);
//             listadeformandolocalidade1.setValueAt(f.getAreaactividade(), i, 8);
//            listadeformandolocalidade1.setValueAt(f.getEmpregador(), i, 9);
//            listadeformandolocalidade1.setValueAt(f.getIdcurso().getCurso(), i, 10);
//
//
//            i++;
//        }
//
//
//
//    }
//     
//     private void prenchercomboArea() throws SQLException {
//
//        List<Curso> area = new CursoJpaController().findCursoEntities();
//        ComboBoxpesquisaArea.removeAllItems();
//        for (Curso d : area) {
//            ComboBoxpesquisaArea.addItem(d);
//        }
//    }
//     
////     private void prenchercomboLocalidade3() throws SQLException {
////        List<Localidade> comunidades = new ArrayList<Localidade>();
////        if (ComboBoxpesquisadistrito3.getSelectedItem() == null) {
////            return;
////        }
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            comunidades = new LocalidadeDao().mostrarLocalidade(ComboBoxpesquisadistrito3.getSelectedIndex()+1);
////        }
////        ComboBoxpesquisalocalidade3.removeAllItems();
////        ComboBoxpesquisalocalidade3.addItem("--Localidade--");
////        for (Localidade p : comunidades) {
////            ComboBoxpesquisalocalidade3.addItem(p);
////        }
////    }
////     
////     private void prenchercomboDistrito3() throws SQLException {
////
////        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
////        ComboBoxpesquisadistrito3.removeAllItems();
////        ComboBoxpesquisadistrito3.addItem("--Distrito--");
////        for (Distrito d : distritos) {
////            ComboBoxpesquisadistrito3.addItem(d);
////        }
////        if (!distritos.isEmpty()) {
////            ComboBoxpesquisadistrito3.setSelectedIndex(0);
////        }
////
////    }
//     
//     public void listarRelatorioArea(){
//  
////         Distrito d = null;
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            d = (Distrito) ComboBoxpesquisadistrito3.getSelectedItem();
////        }
////        Localidade l = null;
////        if (ComboBoxpesquisalocalidade3.getSelectedIndex() != 0) {
////            l = (Localidade) ComboBoxpesquisalocalidade3.getSelectedItem();
////        }else{
////        return;
////        }
//        int curso = ((Curso)ComboBoxpesquisaArea.getSelectedItem()).getIdcurso();
//        List<Formando> formandos = new FormandoJpaController().getprio1(ComboBoxpesquisalocalidade3.getSelectedIndex()+1,ComboBoxpesquisaArea.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandoArea.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
// 
//            listadeformandoArea.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//            listadeformandoArea.setValueAt(f.getNome(), i, 1);
//            
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandoArea.setValueAt(f.getIdade(), i, 2);
//            listadeformandoArea.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 3);
//            listadeformandoArea.setValueAt(f.getContacto(), i, 4);
//            listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            if (f.getAreadeformacao().getIdcurso1().getIdcurso()==curso) {
////                listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            } else if (f.getAreadeformacao().getIdcurso2().getIdcurso()==curso){
////                listadeformandoArea.setValueAt("Prioridade 2", i, 5);
////            } else {
////                listadeformandoArea.setValueAt("Prioridade 3", i, 5);
////            }
//
//
//            i++;
//        }
//     
//     }
//    private void prenchercomboDistritopri() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito3.removeAllItems();
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito3.addItem(d);
//        }
//
//
//
//    }
//    
//
////      private void prenchercomboPosto() throws SQLException {
////       
////             List<Posto> distritos = new PostoDao().mostrarPosto(ComboBoxpesquisadistrito.getSelectedIndex()+1);
////                ComboBoxpesquisaposto.removeAllItems();
////                for (Posto p : distritos) {
////                         ComboBoxpesquisaposto.addItem(p.getPosto());
////               }
////               
////                   
////       
////    }
//    private void prenchercomboLocalidadespr() throws SQLException {
//
//        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        ComboBoxpesquisalocalidade3.removeAllItems();
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade3.addItem(p);
//        }
//
//
//
//    }
//   
//     private void prenchercomboDistritopri2() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito4.removeAllItems();
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito4.addItem(d);
//        }
//    }
//     
//    private void prenchercomboLocalidadespr2() throws SQLException {
//
//        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        ComboBoxpesquisalocalidade4.removeAllItems();
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade4.addItem(p);
//        }
//    }
//    private void prenchercomboDistritopri3() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito5.removeAllItems();
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito5.addItem(d);
//        }
//    }
//     
//    private void prenchercomboLocalidadespr3() throws SQLException {
//
//        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        ComboBoxpesquisalocalidade5.removeAllItems();
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade5.addItem(p);
//        }
//    }
//    private void prenchercomboArea1() throws SQLException {
//
//        List<Curso> area = new CursoJpaController().findCursoEntities();
//        ComboBoxpesquisaArea1.removeAllItems();
//        for (Curso d : area) {
//            ComboBoxpesquisaArea1.addItem(d);
//        }
//    }
//    private void prenchercomboArea3() throws SQLException {
//
//        List<Curso> area = new CursoJpaController().findCursoEntities();
//        ComboBoxpesquisaArea2.removeAllItems();
//        for (Curso d : area) {
//            ComboBoxpesquisaArea2.addItem(d);
//        }
//    }
//     public void listarRelatorioArea1(){
//  
////         Distrito d = null;
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            d = (Distrito) ComboBoxpesquisadistrito3.getSelectedItem();
////        }
////        Localidade l = null;
////        if (ComboBoxpesquisalocalidade3.getSelectedIndex() != 0) {
////            l = (Localidade) ComboBoxpesquisalocalidade3.getSelectedItem();
////        }else{
////        return;
////        }
//        int curso = ((Curso)ComboBoxpesquisaArea.getSelectedItem()).getIdcurso();
//        List<Formando> formandos = new FormandoJpaController().getprio2(ComboBoxpesquisalocalidade4.getSelectedIndex()+1,ComboBoxpesquisaArea1.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandoArea1.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
// 
//            listadeformandoArea1.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//            listadeformandoArea1.setValueAt(f.getNome(), i, 1);
//            
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandoArea1.setValueAt(f.getIdade(), i, 2);
//            listadeformandoArea1.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 3);
//            listadeformandoArea1.setValueAt(f.getContacto(), i, 4);
//            listadeformandoArea1.setValueAt("Prioridade 2", i, 5);
////            if (f.getAreadeformacao().getIdcurso1().getIdcurso()==curso) {
////                listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            } else if (f.getAreadeformacao().getIdcurso2().getIdcurso()==curso){
////                listadeformandoArea.setValueAt("Prioridade 2", i, 5);
////            } else {
////                listadeformandoArea.setValueAt("Prioridade 3", i, 5);
////            }
//
//
//            i++;
//        }
//     
//     }
//     public void listarRelatorioArea3(){
//  
////         Distrito d = null;
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            d = (Distrito) ComboBoxpesquisadistrito3.getSelectedItem();
////        }
////        Localidade l = null;
////        if (ComboBoxpesquisalocalidade3.getSelectedIndex() != 0) {
////            l = (Localidade) ComboBoxpesquisalocalidade3.getSelectedItem();
////        }else{
////        return;
////        }
//        int curso = ((Curso)ComboBoxpesquisaArea.getSelectedItem()).getIdcurso();
//        List<Formando> formandos = new FormandoJpaController().getprio3(ComboBoxpesquisalocalidade5.getSelectedIndex()+1,ComboBoxpesquisaArea2.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandoArea2.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
// 
//            listadeformandoArea2.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//            listadeformandoArea2.setValueAt(f.getNome(), i, 1);
//            
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandoArea2.setValueAt(f.getIdade(), i, 2);
//            listadeformandoArea2.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 3);
//            listadeformandoArea2.setValueAt(f.getContacto(), i, 4);
//            listadeformandoArea2.setValueAt("Prioridade 3", i, 5);
////            if (f.getAreadeformacao().getIdcurso1().getIdcurso()==curso) {
////                listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            } else if (f.getAreadeformacao().getIdcurso2().getIdcurso()==curso){
////                listadeformandoArea.setValueAt("Prioridade 2", i, 5);
////            } else {
////                listadeformandoArea.setValueAt("Prioridade 3", i, 5);
////            }
//
//
//            i++;
//        }
//     
//     }
////     public void listarTurma() {
////        try {
////            List<Formando> formandos = new FormandoDao().listarTurma(ComboBoxpesquisalocalidade6.getSelectedIndex()+1);
////
////            DefaultTableModel tbm = (DefaultTableModel) listadeformandoturma.getModel();
////
////            for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
////                tbm.removeRow(i);
////            }
////            int i = 0;
////            for (Formando f : formandos) {
////                tbm.addRow(new String[1]);
////
////                listadeformandoturma.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
////                listadeformandoturma.setValueAt(f.getNome(), i, 1);
////                if (f.getSexo() == true) {
////                    listadeformandoturma.setValueAt("Masculino", i, 2);
////                } else {
////                    listadeformandoturma.setValueAt("Feminino", i, 2);
////                }
////    //                     listadeformando.setValueAt(f.getSexo(), i, 2);
////                listadeformandoturma.setValueAt(f.getIdade(), i, 3);
////                listadeformandoturma.setValueAt(f.getContacto(), i, 4);
////              //  listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
////                listadeformandoturma.setValueAt(f.getIdcurso().getCurso(), i, 5);
////
////
////                i++;
////            }
////        } catch (SQLException ex) {
////            Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
////        }
////
////
////
////    }
////     
////     public void listarTurma1() {
////        try {
////            List<Formando> formandos = new FormandoDao().listarTurma2(ComboBoxpesquisalocalidade7.getSelectedIndex()+1);
////
////            DefaultTableModel tbm = (DefaultTableModel) listadeformandoturma1.getModel();
////
////            for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
////                tbm.removeRow(i);
////            }
////            int i = 0;
////            for (Formando f : formandos) {
////                tbm.addRow(new String[1]);
////
////                listadeformandoturma1.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
////                listadeformandoturma1.setValueAt(f.getNome(), i, 1);
////                if (f.getSexo() == true) {
////                    listadeformandoturma1.setValueAt("Masculino", i, 2);
////                } else {
////                    listadeformandoturma1.setValueAt("Feminino", i, 2);
////                }
////    //                     listadeformando.setValueAt(f.getSexo(), i, 2);
////                listadeformandoturma1.setValueAt(f.getIdade(), i, 3);
////                listadeformandoturma1.setValueAt(f.getContacto(), i, 4);
////              //  listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
////                listadeformandoturma1.setValueAt(f.getIdcurso().getCurso(), i, 5);
////
////
////                i++;
////            }
////        } catch (SQLException ex) {
////            Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
////        }
////
////
////
////    }
}
