/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Dao.DistritoDao;
import Dao.FormandoDao;
import Dao.LocalidadeDao;
import Modelo.Areadeformacao;
import Modelo.Curso;
import Modelo.Distrito;
import Modelo.Finscritos;
import Modelo.Formacaoturma;
import Modelo.Formador;
import Modelo.Formadorturma;
import Modelo.Formando;
import Modelo.Localidade;
import Modelo.Relactividadeprof;
import Modelo.Relestadocivil;
import Modelo.Relformandoarea;
import Persistencia.AreadeformacaoJpaController;
import Persistencia.CursoJpaController;
import Persistencia.DistritoJpaController;
import Persistencia.FinscritosJpaController;
import Persistencia.FormacaoturmaJpaController;
import Persistencia.FormadorJpaController;
import Persistencia.FormadorturmaJpaController;
import Persistencia.FormandoJpaController;
import Persistencia.LocalidadeJpaController;
import Persistencia.exceptions.IllegalOrphanException;
import Persistencia.exceptions.NonexistentEntityException;
import Persistencia.exceptions.PreexistingEntityException;
import java.awt.Image;
import java.beans.PropertyVetoException;
import java.io.File;
import java.sql.SQLException;
import java.text.BreakIterator;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import metodo.RelatorioCtr;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MASSINGUE
 */
public class GestaoTurmaformando extends javax.swing.JInternalFrame {

    Formacaoturma formando = new Formacaoturma();
    Formadorturma forturma = new Formadorturma();
    Curso curso = new Curso();

    /**
     * Creates new form GerirFormando
     */
    public GestaoTurmaformando() {
        try {
            initComponents();
            prenchercomboDistrito();
            prenchercomboDistrito10();
            prenchercomboLocalidade();
            prenchercomboLocalidades();
            listarFormandos();
            prenchercomboLocalidade1();
            prenchercomboLocalidadess();
//            prenchercomboLocalidade2();
//            prenchercomboDistrito2();
            //  prenchercomboArea();
            prenchercomboArea1();
            listarFormadores();


        } catch (SQLException ex) {
            Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboBoxpesquisadistrito = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ComboBoxpesquisalocalidade = new javax.swing.JComboBox();
        ComboBoxpesquisaArea = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadeformando = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        botaoEdit = new javax.swing.JButton();
        botaoDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listadeformador = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        botaoEdit1 = new javax.swing.JButton();
        botaoDelete1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        ComboBoxpesquisadistrito1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ComboBoxpesquisalocalidade1 = new javax.swing.JComboBox();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseReleased(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(102, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Curso:");

        ComboBoxpesquisadistrito.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisadistritoItemStateChanged(evt);
            }
        });

        jLabel4.setText("Distrito:");

        jLabel6.setText("Comunidade:");

        ComboBoxpesquisalocalidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisalocalidadeItemStateChanged(evt);
            }
        });

        ComboBoxpesquisaArea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisaAreaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisadistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(ComboBoxpesquisalocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisaArea, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxpesquisadistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisalocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisaArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listadeformando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero", "Nome Completo", "Sexo", "Idade", "Curso", "Nº Horas Form Freq.", "Nº Horas em falta Mes.", "Aprovacao", "Desistencia", "Classificacao", "Ocorrencias"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadeformando.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadeformandoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listadeformando);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1324, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 153, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(0, 153, 255));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/novo.png"))); // NOI18N
        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botaoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_45.png"))); // NOI18N
        botaoEdit.setText("Modificar");
        botaoEdit.setEnabled(false);
        botaoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditActionPerformed(evt);
            }
        });

        botaoDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_49.png"))); // NOI18N
        botaoDelete.setText("Eliminar");
        botaoDelete.setEnabled(false);
        botaoDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeleteActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Erase.png"))); // NOI18N
        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(botaoEdit)
                    .addComponent(botaoDelete)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Descrição de Turmas", jPanel9);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listadeformador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero", "Nome", "Sexo", "Idade", "A.Leccionação", "Nº Horas Practicas Curso", "Nº Horas Teoricas Curso", "Nº Horas Teoricas Mes", "Nº Horas Teoricas Mes", "Avaliacao", "Ocorrencias"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadeformador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadeformadorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listadeformador);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(0, 153, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel11.setBackground(new java.awt.Color(0, 153, 255));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/novo.png"))); // NOI18N
        jButton2.setText("Novo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        botaoEdit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_45.png"))); // NOI18N
        botaoEdit1.setText("Modificar");
        botaoEdit1.setEnabled(false);
        botaoEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEdit1ActionPerformed(evt);
            }
        });

        botaoDelete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/001_49.png"))); // NOI18N
        botaoDelete1.setText("Eliminar");
        botaoDelete1.setEnabled(false);
        botaoDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDelete1ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Erase.png"))); // NOI18N
        jButton5.setText("Cancelar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(botaoEdit1)
                    .addComponent(botaoDelete1)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(102, 204, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ComboBoxpesquisadistrito1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisadistrito1ItemStateChanged(evt);
            }
        });

        jLabel5.setText("Distrito:");

        jLabel7.setText("Comunidade:");

        ComboBoxpesquisalocalidade1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxpesquisalocalidade1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxpesquisadistrito1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(ComboBoxpesquisalocalidade1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(923, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxpesquisadistrito1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxpesquisalocalidade1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sub-Modulo Formador", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBoxpesquisadistritoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisadistritoItemStateChanged
        try {
            prenchercomboLocalidade();
            listarFormandosdistritos();
        } catch (SQLException ex) {
            Logger.getLogger(GestaoFormando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboBoxpesquisadistritoItemStateChanged

    private void ComboBoxpesquisalocalidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisalocalidadeItemStateChanged
        listarFormandoslocalidades();
    }//GEN-LAST:event_ComboBoxpesquisalocalidadeItemStateChanged

    private void listadeformandoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadeformandoMouseClicked

        int selecionado = listadeformando.getSelectedRow();
        int idEmp = Integer.valueOf(listadeformando.getValueAt(selecionado, 0).toString());

        formando = new FormacaoturmaJpaController().findFormacaoturma(idEmp);
        botaoDelete.setEnabled(true);
        botaoEdit.setEnabled(true);
        //botaprevisualizar.setEnabled(true);
        // JOptionPane.showMessageDialog(null, emp.getIdformando());


    }//GEN-LAST:event_listadeformandoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new CadastroTurma(null, true).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botaoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditActionPerformed
        new ModificarTurma(formando).setVisible(true);
        // new ModificarCandidato(emp).setVisible(true);
    }//GEN-LAST:event_botaoEditActionPerformed

    private void botaoDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeleteActionPerformed
//          String msg = "Selecciona o Formando primeiro?";
//        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
//        if (resp == JOptionPane.YES_OPTION){

        eliminarCandidato();
        listarFormandos();

//        }
    }//GEN-LAST:event_botaoDeleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        try {
            this.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formAncestorAdded

    private void ComboBoxpesquisadistrito1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisadistrito1ItemStateChanged

        listarFormadoresdistrito();

    }//GEN-LAST:event_ComboBoxpesquisadistrito1ItemStateChanged

    private void ComboBoxpesquisalocalidade1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisalocalidade1ItemStateChanged
        listarFormadorescomunidade();
    }//GEN-LAST:event_ComboBoxpesquisalocalidade1ItemStateChanged

    private void listadeformadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadeformadorMouseClicked
        int selecionado = listadeformador.getSelectedRow();
        int idEmp = Integer.valueOf(listadeformador.getValueAt(selecionado, 0).toString());

        forturma = new FormadorturmaJpaController().findFormadorturma(idEmp);
        botaoDelete1.setEnabled(true);
        botaoEdit1.setEnabled(true);
    }//GEN-LAST:event_listadeformadorMouseClicked

    private void jTabbedPane1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseReleased
        if (jTabbedPane1.getSelectedIndex() == 2) {
            try {
                prenchercomboDistrito1();
            } catch (SQLException ex) {
                Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prenchercomboLocalidade1();
            } catch (SQLException ex) {
                Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
            }
            listarRelatorioFormandos();
        }
//////        else 
//////        if (jTabbedPane1.getSelectedIndex() == 3) {
//////            try {
//////                prenchercomboArea();
//////            } catch (SQLException ex) {
//////                Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
//////            }
//////        }
    }//GEN-LAST:event_jTabbedPane1MouseReleased

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void ComboBoxpesquisaAreaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxpesquisaAreaItemStateChanged
        listarFormandosCurso();
    }//GEN-LAST:event_ComboBoxpesquisaAreaItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new CadastroFormadorTurma(null, true).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botaoEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEdit1ActionPerformed
        new ModificarFormadorTurma(forturma).setVisible(true);
    }//GEN-LAST:event_botaoEdit1ActionPerformed

    private void botaoDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDelete1ActionPerformed
        eliminarformador();
    }//GEN-LAST:event_botaoDelete1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBoxpesquisaArea;
    private javax.swing.JComboBox ComboBoxpesquisadistrito;
    private javax.swing.JComboBox ComboBoxpesquisadistrito1;
    private javax.swing.JComboBox ComboBoxpesquisalocalidade;
    private javax.swing.JComboBox ComboBoxpesquisalocalidade1;
    private javax.swing.JButton botaoDelete;
    private javax.swing.JButton botaoDelete1;
    private javax.swing.JButton botaoEdit;
    private javax.swing.JButton botaoEdit1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable listadeformador;
    private javax.swing.JTable listadeformando;
    // End of variables declaration//GEN-END:variables

    private void prenchercomboDistrito() throws SQLException {

        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
        ComboBoxpesquisadistrito.removeAllItems();
        for (Distrito d : distritos) {
            ComboBoxpesquisadistrito.addItem(d);
        }
    }

    private void prenchercomboDistrito10() throws SQLException {

        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
        ComboBoxpesquisadistrito1.removeAllItems();
        for (Distrito d : distritos) {
            ComboBoxpesquisadistrito1.addItem(d);
        }
    }

    private void prenchercomboLocalidades() throws SQLException {

        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
        ComboBoxpesquisalocalidade.removeAllItems();
        for (Localidade p : comunidades) {
            ComboBoxpesquisalocalidade.addItem(p);
        }
    }

    private void prenchercomboLocalidade() throws SQLException {
        if (ComboBoxpesquisadistrito.getSelectedItem() != null) {
            List<Localidade> comunidades = new LocalidadeJpaController().getloLocalidades(((Distrito) ComboBoxpesquisadistrito.getSelectedItem()).getIddistrito());
            ComboBoxpesquisalocalidade.removeAllItems();
            for (Localidade p : comunidades) {
                ComboBoxpesquisalocalidade.addItem(p);
            }
        }
    }

    private void prenchercomboLocalidade1() throws SQLException {
        List<Localidade> comunidades = new ArrayList<Localidade>();
        if (ComboBoxpesquisadistrito1.getSelectedIndex() != 0) {
            comunidades = new LocalidadeJpaController().findLocalidadeEntities();
        }
        ComboBoxpesquisalocalidade1.removeAllItems();
        //ComboBoxpesquisalocalidade1.addItem("--Localidade--");
        for (Localidade p : comunidades) {
            ComboBoxpesquisalocalidade1.addItem(p);
        }
    }
//      private void prenchercomboArea() throws SQLException {
//
//        List<Curso> area = new CursoJpaController().findCursoEntities();
//        ComboBoxpesquisaArea1.removeAllItems();
//        for (Curso d : area) {
//            ComboBoxpesquisaArea1.addItem(d);
//        }
//    }
//     private void prenchercomboLocalidade2() throws SQLException {
//        List<Localidade> comunidades = new ArrayList<Localidade>();
//        if (ComboBoxpesquisadistrito2.getSelectedIndex() != 0) {
//            comunidades = new LocalidadeJpaController().findLocalidadeEntities();
//        }
//        ComboBoxpesquisalocalidade2.removeAllItems();
//        //ComboBoxpesquisalocalidade1.addItem("--Localidade--");
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade2.addItem(p);
//        }
//    }

    private void prenchercomboLocalidadess() throws SQLException {

        List<Localidade> comunidades = new LocalidadeJpaController().findLocalidadeEntities();
        ComboBoxpesquisalocalidade1.removeAllItems();
        for (Localidade p : comunidades) {
            ComboBoxpesquisalocalidade1.addItem(p);
        }



    }

    private void prenchercomboDistrito1() throws SQLException {

        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
        ComboBoxpesquisadistrito1.removeAllItems();
        // ComboBoxpesquisadistrito1.addItem("--Distrito--");
        for (Distrito d : distritos) {
            ComboBoxpesquisadistrito1.addItem(d);
        }
        if (!distritos.isEmpty()) {
            ComboBoxpesquisadistrito1.setSelectedIndex(0);
        }

    }

//    public void listarFormando() {
//        try {
//
//            List<Formando> formandos = new FormandoDao().listarFormandopesquisado("%" + txtPesquisaNome.getText() + "%");
//
//            DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
//
//            for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//                tbm.removeRow(i);
//            }
//            int i = 0;
//            for (Formando f : formandos) {
//                tbm.addRow(new String[1]);
//
//                listadeformando.setValueAt(f.getIdformando(), i, 0);
//                listadeformando.setValueAt(f.getNome(), i, 1);
//                if (f.getSexo() == true) {
//                    listadeformando.setValueAt("Masculino", i, 2);
//                } else {
//                    listadeformando.setValueAt("Femenino", i, 2);
//                }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//                listadeformando.setValueAt(f.getIdade(), i, 3);
//                listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//                listadeformando.setValueAt(f.getOutrahabilidades(), i, 5);
//
//                listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
//
//
//                i++;
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(GestaoFormando.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//
//    }
    public void listarFormandos() {

        List<Formacaoturma> formandos = new FormacaoturmaJpaController().findFormacaoturmaEntities();

        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formacaoturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformando.setValueAt(f.getFormando().getIdformando(), i, 0);
            listadeformando.setValueAt(f.getFormando().getNome(), i, 1);
            if (f.getFormando().getSexo() == true) {
                listadeformando.setValueAt("Masculino", i, 2);
            } else {
                listadeformando.setValueAt("Feminino", i, 2);
            }
            listadeformando.setValueAt(f.getFormando().getIdade(), i, 3);
            listadeformando.setValueAt(f.getFormando().getIdcurso().getCurso(), i, 4);
            listadeformando.setValueAt(f.getHorasmesprimeiro() + f.getHorasmesegundo() + f.getHorasmesterceiro(), i, 5);
            listadeformando.setValueAt(f.getHorasfaltaprimeiro() + f.getHorasfaltasegundo() + f.getHorasfaltaterceiro(), i, 6);
            // listadeformando.setValueAt(f.getHorasmesprimeiro()+f.getHorasmesegundo()+f.getHorasmesterceiro(), i, 5);
            if (f.getAprovacao() == true) {
                listadeformando.setValueAt("Aprovado", i, 7);
            } else {
                listadeformando.setValueAt("Reprovado", i, 7);
            }
            if (f.getDesistencia() == true) {
                listadeformando.setValueAt("Sim", i, 8);
            } else {
                listadeformando.setValueAt("Nao", i, 8);
            }
            listadeformando.setValueAt(f.getClassificacao(), i, 9);
//            listadeformando.setValueAt(f.getOcorrencias(), i, 10);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

    public void listarFormandoslocalidades() {
        // int id=((Localidade)ComboBoxpesquisalocalidade.getSelectedItem()).getIdlocalidade();
        // JOptionPane.showMessageDialog(null, "hh"+id);
        List<Formacaoturma> formandos = new FormacaoturmaJpaController().prencherLocalidades(ComboBoxpesquisalocalidade.getSelectedIndex() + 1);

        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formacaoturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformando.setValueAt(f.getFormando().getIdformando(), i, 0);
            listadeformando.setValueAt(f.getFormando().getNome(), i, 1);
            if (f.getFormando().getSexo() == true) {
                listadeformando.setValueAt("Masculino", i, 2);
            } else {
                listadeformando.setValueAt("Feminino", i, 2);
            }
            listadeformando.setValueAt(f.getFormando().getIdade(), i, 3);
            listadeformando.setValueAt(f.getFormando().getIdcurso().getCurso(), i, 4);
            listadeformando.setValueAt(f.getHorasmesprimeiro() + f.getHorasmesegundo() + f.getHorasmesterceiro(), i, 5);
            listadeformando.setValueAt(f.getHorasfaltaprimeiro() + f.getHorasfaltasegundo() + f.getHorasfaltaterceiro(), i, 6);
            // listadeformando.setValueAt(f.getHorasmesprimeiro()+f.getHorasmesegundo()+f.getHorasmesterceiro(), i, 5);
            if (f.getAprovacao() == true) {
                listadeformando.setValueAt("Aprovado", i, 7);
            } else {
                listadeformando.setValueAt("Reprovado", i, 7);
            }
            if (f.getDesistencia() == true) {
                listadeformando.setValueAt("Sim", i, 8);
            } else {
                listadeformando.setValueAt("Nao", i, 8);
            }
            listadeformando.setValueAt(f.getClassificacao(), i, 9);

//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

    public void listarFormandosdistritos() {
        // int id=((Localidade)ComboBoxpesquisalocalidade.getSelectedItem()).getIdlocalidade();
        // JOptionPane.showMessageDialog(null, "hh"+id);
        List<Formacaoturma> formandos = new FormacaoturmaJpaController().prencherLocalidades(ComboBoxpesquisadistrito.getSelectedIndex() + 1);

        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formacaoturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformando.setValueAt(f.getFormando().getIdformando(), i, 0);
            listadeformando.setValueAt(f.getFormando().getNome(), i, 1);
            if (f.getFormando().getSexo() == true) {
                listadeformando.setValueAt("Masculino", i, 2);
            } else {
                listadeformando.setValueAt("Feminino", i, 2);
            }
            listadeformando.setValueAt(f.getFormando().getIdade(), i, 3);
            listadeformando.setValueAt(f.getFormando().getIdcurso().getCurso(), i, 4);
            listadeformando.setValueAt(f.getHorasmesprimeiro() + f.getHorasmesegundo() + f.getHorasmesterceiro(), i, 5);
            listadeformando.setValueAt(f.getHorasfaltaprimeiro() + f.getHorasfaltasegundo() + f.getHorasfaltaterceiro(), i, 6);
            // listadeformando.setValueAt(f.getHorasmesprimeiro()+f.getHorasmesegundo()+f.getHorasmesterceiro(), i, 5);
            if (f.getAprovacao() == true) {
                listadeformando.setValueAt("Aprovado", i, 7);
            } else {
                listadeformando.setValueAt("Reprovado", i, 7);
            }
            if (f.getDesistencia() == true) {
                listadeformando.setValueAt("Sim", i, 8);
            } else {
                listadeformando.setValueAt("Nao", i, 8);
            }
            listadeformando.setValueAt(f.getClassificacao(), i, 9);
//            listadeformando.setValueAt(f.getOcorrencias(), i, 10);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

    public void listarFormandosCurso() {
        // int id=((Localidade)ComboBoxpesquisalocalidade.getSelectedItem()).getIdlocalidade();
        // JOptionPane.showMessageDialog(null, "hh"+id);
        List<Formacaoturma> formandos = new FormacaoturmaJpaController().prencherLocalidades(ComboBoxpesquisaArea.getSelectedIndex() + 1);

        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formacaoturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformando.setValueAt(f.getFormando().getIdformando(), i, 0);
            listadeformando.setValueAt(f.getFormando().getNome(), i, 1);
            if (f.getFormando().getSexo() == true) {
                listadeformando.setValueAt("Masculino", i, 2);
            } else {
                listadeformando.setValueAt("Feminino", i, 2);
            }
            listadeformando.setValueAt(f.getFormando().getIdade(), i, 3);
            listadeformando.setValueAt(f.getFormando().getIdcurso().getCurso(), i, 4);
            listadeformando.setValueAt(f.getHorasmesprimeiro() + f.getHorasmesegundo() + f.getHorasmesterceiro(), i, 5);
            listadeformando.setValueAt(f.getHorasfaltaprimeiro() + f.getHorasfaltasegundo() + f.getHorasfaltaterceiro(), i, 6);
            // listadeformando.setValueAt(f.getHorasmesprimeiro()+f.getHorasmesegundo()+f.getHorasmesterceiro(), i, 5);
            if (f.getAprovacao() == true) {
                listadeformando.setValueAt("Aprovado", i, 7);
            } else {
                listadeformando.setValueAt("Reprovado", i, 7);
            }
            if (f.getDesistencia() == true) {
                listadeformando.setValueAt("Sim", i, 8);
            } else {
                listadeformando.setValueAt("Nao", i, 8);
            }
            listadeformando.setValueAt(f.getClassificacao(), i, 9);
//            listadeformando.setValueAt(f.getOcorrencias(), i, 10);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

    public void listarFormadores() {

        List<Formadorturma> formandos = new FormadorturmaJpaController().findFormadorturmaEntities();

        DefaultTableModel tbm = (DefaultTableModel) listadeformador.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formadorturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformador.setValueAt(f.getFormador().getIdformador(), i, 0);
            listadeformador.setValueAt(f.getFormador().getFormador(), i, 1);
            if (f.getFormador().getSexo() == true) {
                listadeformador.setValueAt("Masculino", i, 2);
            } else {
                listadeformador.setValueAt("Feminino", i, 2);
            }
            listadeformador.setValueAt(f.getFormador().getDatanasc(), i, 3);
            listadeformador.setValueAt(f.getArealeccionar(), i, 4);
            listadeformador.setValueAt(f.getPracticacurso() + f.getPracticacurso2() + f.getPracticacurso3(), i, 5);
            listadeformador.setValueAt(f.getTeoricacurso() + f.getTeoricacurso2() + f.getTeoricacurso3(), i, 6);
            listadeformador.setValueAt(f.getPracticames() + f.getPracticames2() + f.getPracticames3(), i, 7);
            listadeformador.setValueAt(f.getTeoricames() + f.getTeoricames2() + f.getTeoricames3(), i, 8);
            listadeformador.setValueAt(f.getAvaliacao(), i, 9);
            listadeformador.setValueAt(f.getOcorrencias(), i, 10);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

    public void listarFormadoresdistrito() {

        List<Formadorturma> formandos = new FormadorturmaJpaController().prencherDistritos(ComboBoxpesquisadistrito1.getSelectedIndex() + 1);

        DefaultTableModel tbm = (DefaultTableModel) listadeformador.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formadorturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformador.setValueAt(f.getFormador().getIdformador(), i, 0);
            listadeformador.setValueAt(f.getFormador().getFormador(), i, 1);
            if (f.getFormador().getSexo() == true) {
                listadeformador.setValueAt("Masculino", i, 2);
            } else {
                listadeformador.setValueAt("Feminino", i, 2);
            }
            listadeformador.setValueAt(f.getFormador().getDatanasc(), i, 3);
            listadeformador.setValueAt(f.getArealeccionar(), i, 4);
            listadeformador.setValueAt(f.getPracticacurso() + f.getPracticacurso2() + f.getPracticacurso3(), i, 5);
            listadeformador.setValueAt(f.getTeoricacurso() + f.getTeoricacurso2() + f.getTeoricacurso3(), i, 6);
            listadeformador.setValueAt(f.getPracticames() + f.getPracticames2() + f.getPracticames3(), i, 7);
            listadeformador.setValueAt(f.getTeoricames() + f.getTeoricames2() + f.getTeoricames3(), i, 8);
            listadeformador.setValueAt(f.getAvaliacao(), i, 9);
            listadeformador.setValueAt(f.getOcorrencias(), i, 10);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

    public void listarFormadorescomunidade() {

        List<Formadorturma> formandos = new FormadorturmaJpaController().prencherLocalidades(ComboBoxpesquisalocalidade1.getSelectedIndex() + 1);

        DefaultTableModel tbm = (DefaultTableModel) listadeformador.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formadorturma f : formandos) {
            tbm.addRow(new String[1]);

            listadeformador.setValueAt(f.getFormador().getIdformador(), i, 0);
            listadeformador.setValueAt(f.getFormador().getFormador(), i, 1);
            if (f.getFormador().getSexo() == true) {
                listadeformador.setValueAt("Masculino", i, 2);
            } else {
                listadeformador.setValueAt("Feminino", i, 2);
            }
            listadeformador.setValueAt(f.getFormador().getDatanasc(), i, 3);
            listadeformador.setValueAt(f.getArealeccionar(), i, 4);
            listadeformador.setValueAt(f.getPracticacurso() + f.getPracticacurso2() + f.getPracticacurso3(), i, 5);
            listadeformador.setValueAt(f.getTeoricacurso() + f.getTeoricacurso2() + f.getTeoricacurso3(), i, 6);
            listadeformador.setValueAt(f.getPracticames() + f.getPracticames2() + f.getPracticames3(), i, 7);
            listadeformador.setValueAt(f.getTeoricames() + f.getTeoricames2() + f.getTeoricames3(), i, 8);
            listadeformador.setValueAt(f.getAvaliacao(), i, 9);
            listadeformador.setValueAt(f.getOcorrencias(), i, 10);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
            // JOptionPane.showMessageDialog(null, f.getIdlocalidade().getIdposto().getIddistrito().getDistrito());




            i++;
        }

    }

//    public void listarFormandosDistrito() {
//
//
//        List<Formando> formandos = new FormandoJpaController().formandoDistrito(((Distrito) ComboBoxpesquisadistrito.getSelectedItem()).getIddistrito());
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformando.setValueAt(f.getIdformando(), i, 0);
//            listadeformando.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformando.setValueAt("Masculino", i, 2);
//            } else {
//                listadeformando.setValueAt("Feminino", i, 2);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformando.setValueAt(f.getIdade(), i, 3);
//            listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
//            listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
//
//
//            i++;
//        }
//
//
//
//    }
//
//    public void listarFormandosLocalidade() {
//
////            JOptionPane.showMessageDialog(null, closable);
//        List<Formando> formandos = new FormandoJpaController().formandoLocalidade(ComboBoxpesquisalocalidade.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformando.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformando.setValueAt(f.getIdformando(), i, 0);
//            listadeformando.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformando.setValueAt("Masculino", i, 2);
//            } else {
//                listadeformando.setValueAt("Feminino", i, 2);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformando.setValueAt(f.getIdade(), i, 3);
//            listadeformando.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
//            listadeformando.setValueAt(f.getIdcurso().getCurso(), i, 6);
//
//
//            i++;
//        }
//
//
//
//    }
//          private void prenchercomboDistrito1() throws SQLException {
//       
//             List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//                ComboBoxpesquisadistrito1.removeAllItems();
//                for (Distrito d : distritos) {
//                         ComboBoxpesquisadistrito1.addItem(d.getDistrito());
//               }
//               
//                   
//       
//    }
//      private void prenchercomboPosto() throws SQLException {
//       
//             List<Posto> distritos = new PostoDao().mostrarPosto(ComboBoxpesquisadistrito.getSelectedIndex()+1);
//                ComboBoxpesquisaposto.removeAllItems();
//                for (Posto p : distritos) {
//                         ComboBoxpesquisaposto.addItem(p.getPosto());
//               }
//               
//                   
//       
//    }
//      
//       private void prenchercomboLocalidade1() throws SQLException {
//       
//             List<Localidade> comunidades = new LocalidadeDao().mostrarLocalidade(ComboBoxpesquisadistrito.getSelectedIndex()+1);
//                ComboBoxpesquisalocalidade1.removeAllItems();
//                for (Localidade p : comunidades) {
//                         ComboBoxpesquisalocalidade1.addItem(p.getLocalidade());
//               }
//               
//                   
//       
//    }
    private void eliminarCandidato() {
        String msg = "Deseja Realmente Eliminar O Formando?";
        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
        if (resp == JOptionPane.YES_OPTION) {
            try {
                int selecionado = listadeformando.getSelectedRow();
                int nr = 0;
                nr = Integer.valueOf(listadeformando.getValueAt(selecionado, 0).toString());
                Formacaoturma f = new Formacaoturma();
                f.setIdformando(nr);
                new FormacaoturmaJpaController().destroy(nr);
                JOptionPane.showMessageDialog(null, "Formando Eliminado Com Sucesso");
                listarFormandos();
            } catch (IllegalOrphanException ex) {
                Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
            }


        }


    }

    private void eliminarformador() {
        String msg = "Deseja Realmente Eliminar O Formador?";
        int resp = JOptionPane.showOptionDialog(getContentPane(), msg, "confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, "Não");
        if (resp == JOptionPane.YES_OPTION) {
            try {
                int selecionado = listadeformador.getSelectedRow();
                int nr = 0;
                nr = Integer.valueOf(listadeformador.getValueAt(selecionado, 0).toString());
                Formadorturma f = new Formadorturma();
                f.setIdformador(nr);
                new FormadorturmaJpaController().destroy(nr);
                JOptionPane.showMessageDialog(null, "Formador Eliminado Com Sucesso");
                listarFormandos();
            } catch (IllegalOrphanException ex) {
                Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(GestaoTurmaformando.class.getName()).log(Level.SEVERE, null, ex);
            }


        }


    }

    public void listarRelatorioFormandos() {

        // JOptionPane.showMessageDialog(null, closable);
        Distrito d = null;
        if (ComboBoxpesquisadistrito1.getSelectedIndex() != 0) {
            d = (Distrito) ComboBoxpesquisadistrito1.getSelectedItem();
        }
        Localidade l = null;
        if (ComboBoxpesquisalocalidade1.getSelectedIndex() != 0) {
            l = (Localidade) ComboBoxpesquisalocalidade1.getSelectedItem();
        }
        List<Formando> formandos = new FormandoJpaController().getRelatorioFormando(ComboBoxpesquisalocalidade1.getSelectedIndex() + 1);

        DefaultTableModel tbm = (DefaultTableModel) listadeformador.getModel();

        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
            tbm.removeRow(i);
        }
        int i = 0;
        for (Formando f : formandos) {
            tbm.addRow(new String[1]);

            listadeformador.setValueAt(f.getNome(), i, 0);
            // listadeformandolocalidade.setValueAt(f.getNome(), i, 1);
            if (f.getSexo() == true) {
                listadeformador.setValueAt("Masculino", i, 1);
            } else {
                listadeformador.setValueAt("Femenino", i, 1);
            }
//                     listadeformando.setValueAt(f.getSexo(), i, 2);
            listadeformador.setValueAt(f.getIdade(), i, 2);
            listadeformador.setValueAt(f.getIdestadocivil().getEstado(), i, 3);
            listadeformador.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
            listadeformador.setValueAt(f.getNragregado(), i, 5);
            listadeformador.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 6);
            listadeformador.setValueAt(f.getAreaactividade(), i, 8);
            listadeformador.setValueAt(f.getEmpregador(), i, 9);
            listadeformador.setValueAt(f.getIdcurso().getCurso(), i, 10);


            i++;
        }



    }

//     public void listarRelatorioFormandos2() {
//
//       // JOptionPane.showMessageDialog(null, closable);
//        Distrito d = null;
//        if (ComboBoxpesquisadistrito1.getSelectedIndex() != 0) {
//            d = (Distrito) ComboBoxpesquisadistrito1.getSelectedItem();
//        }
//        Localidade l = null;
//        if (ComboBoxpesquisalocalidade1.getSelectedIndex() != 0) {
//            l = (Localidade) ComboBoxpesquisalocalidade1.getSelectedItem();
//        }
//        List<Formando> formandos = new FormandoJpaController().getRelatorioFormando(ComboBoxpesquisalocalidade2.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandolocalidade1.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
//
//            listadeformandolocalidade1.setValueAt(f.getNome(), i, 0);
//           // listadeformandolocalidade.setValueAt(f.getNome(), i, 1);
//            if (f.getSexo() == true) {
//                listadeformandolocalidade1.setValueAt("Masculino", i, 1);
//            } else {
//                listadeformandolocalidade1.setValueAt("Femenino", i, 1);
//            }
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandolocalidade1.setValueAt(f.getIdade(), i, 2);
//            listadeformandolocalidade1.setValueAt(f.getIdestadocivil().getEstado(), i, 3);
//            listadeformandolocalidade1.setValueAt(f.getIdlocalidade().getLocalidade(), i, 4);
//            listadeformandolocalidade1.setValueAt(f.getNragregado(), i, 5);
//            listadeformandolocalidade1.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 6);
//             listadeformandolocalidade1.setValueAt(f.getAreaactividade(), i, 8);
//            listadeformandolocalidade1.setValueAt(f.getEmpregador(), i, 9);
//            listadeformandolocalidade1.setValueAt(f.getIdcurso().getCurso(), i, 10);
//
//
//            i++;
//        }
//
//
//
//    }
    private void prenchercomboArea1() throws SQLException {

        List<Curso> area = new CursoJpaController().findCursoEntities();
        ComboBoxpesquisaArea.removeAllItems();
        for (Curso d : area) {
            ComboBoxpesquisaArea.addItem(d);
        }
    }

    private void prenchercomboLocalidade10() throws SQLException {

        List<Localidade> comunidades = new LocalidadeJpaController().getloLocalidades(ComboBoxpesquisadistrito1.getSelectedIndex() + 1);
        ComboBoxpesquisalocalidade1.removeAllItems();
        for (Localidade p : comunidades) {
            ComboBoxpesquisalocalidade1.addItem(p);
        }
    }
//     private void prenchercomboLocalidade3() throws SQLException {
//        List<Localidade> comunidades = new ArrayList<Localidade>();
//        if (ComboBoxpesquisadistrito3.getSelectedItem() == null) {
//            return;
//        }
//        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
//            comunidades = new LocalidadeDao().mostrarLocalidade(ComboBoxpesquisadistrito3.getSelectedIndex()+1);
//        }
//        ComboBoxpesquisalocalidade3.removeAllItems();
//        ComboBoxpesquisalocalidade3.addItem("--Localidade--");
//        for (Localidade p : comunidades) {
//            ComboBoxpesquisalocalidade3.addItem(p);
//        }
//    }
//     
//     private void prenchercomboDistrito3() throws SQLException {
//
//        List<Distrito> distritos = new DistritoDao().mostrarDistritos();
//        ComboBoxpesquisadistrito3.removeAllItems();
//        ComboBoxpesquisadistrito3.addItem("--Distrito--");
//        for (Distrito d : distritos) {
//            ComboBoxpesquisadistrito3.addItem(d);
//        }
//        if (!distritos.isEmpty()) {
//            ComboBoxpesquisadistrito3.setSelectedIndex(0);
//        }
//
//    }
//     public void listarRelatorioArea(){
//  
////         Distrito d = null;
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            d = (Distrito) ComboBoxpesquisadistrito3.getSelectedItem();
////        }
////        Localidade l = null;
////        if (ComboBoxpesquisalocalidade3.getSelectedIndex() != 0) {
////            l = (Localidade) ComboBoxpesquisalocalidade3.getSelectedItem();
////        }else{
////        return;
////        }
//        int curso = ((Curso)ComboBoxpesquisaArea.getSelectedItem()).getIdcurso();
//        List<Formando> formandos = new FormandoJpaController().getprio1(ComboBoxpesquisalocalidade3.getSelectedIndex()+1,ComboBoxpesquisaArea.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandoArea.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
// 
//            listadeformandoArea.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//            listadeformandoArea.setValueAt(f.getNome(), i, 1);
//            
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandoArea.setValueAt(f.getIdade(), i, 2);
//            listadeformandoArea.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 3);
//            listadeformandoArea.setValueAt(f.getContacto(), i, 4);
//            listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            if (f.getAreadeformacao().getIdcurso1().getIdcurso()==curso) {
////                listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            } else if (f.getAreadeformacao().getIdcurso2().getIdcurso()==curso){
////                listadeformandoArea.setValueAt("Prioridade 2", i, 5);
////            } else {
////                listadeformandoArea.setValueAt("Prioridade 3", i, 5);
////            }
//
//
//            i++;
//        }
//     
//     }
//      private void prenchercomboPosto() throws SQLException {
//       
//             List<Posto> distritos = new PostoDao().mostrarPosto(ComboBoxpesquisadistrito.getSelectedIndex()+1);
//                ComboBoxpesquisaposto.removeAllItems();
//                for (Posto p : distritos) {
//                         ComboBoxpesquisaposto.addItem(p.getPosto());
//               }
//               
//                   
//       
//    }
//     public void listarRelatorioArea1(){
//  
////         Distrito d = null;
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            d = (Distrito) ComboBoxpesquisadistrito3.getSelectedItem();
////        }
////        Localidade l = null;
////        if (ComboBoxpesquisalocalidade3.getSelectedIndex() != 0) {
////            l = (Localidade) ComboBoxpesquisalocalidade3.getSelectedItem();
////        }else{
////        return;
////        }
//        int curso = ((Curso)ComboBoxpesquisaArea.getSelectedItem()).getIdcurso();
//        List<Formando> formandos = new FormandoJpaController().getprio2(ComboBoxpesquisalocalidade4.getSelectedIndex()+1,ComboBoxpesquisaArea1.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandoArea1.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
// 
//            listadeformandoArea1.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//            listadeformandoArea1.setValueAt(f.getNome(), i, 1);
//            
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandoArea1.setValueAt(f.getIdade(), i, 2);
//            listadeformandoArea1.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 3);
//            listadeformandoArea1.setValueAt(f.getContacto(), i, 4);
//            listadeformandoArea1.setValueAt("Prioridade 2", i, 5);
////            if (f.getAreadeformacao().getIdcurso1().getIdcurso()==curso) {
////                listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            } else if (f.getAreadeformacao().getIdcurso2().getIdcurso()==curso){
////                listadeformandoArea.setValueAt("Prioridade 2", i, 5);
////            } else {
////                listadeformandoArea.setValueAt("Prioridade 3", i, 5);
////            }
//
//
//            i++;
//        }
//     
//     }
//     public void listarRelatorioArea3(){
//  
////         Distrito d = null;
////        if (ComboBoxpesquisadistrito3.getSelectedIndex() != 0) {
////            d = (Distrito) ComboBoxpesquisadistrito3.getSelectedItem();
////        }
////        Localidade l = null;
////        if (ComboBoxpesquisalocalidade3.getSelectedIndex() != 0) {
////            l = (Localidade) ComboBoxpesquisalocalidade3.getSelectedItem();
////        }else{
////        return;
////        }
//        int curso = ((Curso)ComboBoxpesquisaArea.getSelectedItem()).getIdcurso();
//        List<Formando> formandos = new FormandoJpaController().getprio3(ComboBoxpesquisalocalidade5.getSelectedIndex()+1,ComboBoxpesquisaArea2.getSelectedIndex()+1);
//
//        DefaultTableModel tbm = (DefaultTableModel) listadeformandoArea2.getModel();
//
//        for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//            tbm.removeRow(i);
//        }
//        int i = 0;
//        for (Formando f : formandos) {
//            tbm.addRow(new String[1]);
// 
//            listadeformandoArea2.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//            listadeformandoArea2.setValueAt(f.getNome(), i, 1);
//            
////                     listadeformando.setValueAt(f.getSexo(), i, 2);
//            listadeformandoArea2.setValueAt(f.getIdade(), i, 2);
//            listadeformandoArea2.setValueAt(f.getIdnivelhabilitacao().getNivelhabilitacao(), i, 3);
//            listadeformandoArea2.setValueAt(f.getContacto(), i, 4);
//            listadeformandoArea2.setValueAt("Prioridade 3", i, 5);
////            if (f.getAreadeformacao().getIdcurso1().getIdcurso()==curso) {
////                listadeformandoArea.setValueAt("Prioridade 1", i, 5);
////            } else if (f.getAreadeformacao().getIdcurso2().getIdcurso()==curso){
////                listadeformandoArea.setValueAt("Prioridade 2", i, 5);
////            } else {
////                listadeformandoArea.setValueAt("Prioridade 3", i, 5);
////            }
//
//
//            i++;
//        }
//     
//     }
//     public void listarTurma() {
//        try {
//            List<Formando> formandos = new FormandoDao().listarTurma(ComboBoxpesquisalocalidade6.getSelectedIndex()+1);
//
//            DefaultTableModel tbm = (DefaultTableModel) listadeformandoturma.getModel();
//
//            for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//                tbm.removeRow(i);
//            }
//            int i = 0;
//            for (Formando f : formandos) {
//                tbm.addRow(new String[1]);
//
//                listadeformandoturma.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//                listadeformandoturma.setValueAt(f.getNome(), i, 1);
//                if (f.getSexo() == true) {
//                    listadeformandoturma.setValueAt("Masculino", i, 2);
//                } else {
//                    listadeformandoturma.setValueAt("Feminino", i, 2);
//                }
//    //                     listadeformando.setValueAt(f.getSexo(), i, 2);
//                listadeformandoturma.setValueAt(f.getIdade(), i, 3);
//                listadeformandoturma.setValueAt(f.getContacto(), i, 4);
//              //  listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
//                listadeformandoturma.setValueAt(f.getIdcurso().getCurso(), i, 5);
//
//
//                i++;
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//
//
//    }
//     
//     public void listarTurma1() {
//        try {
//            List<Formando> formandos = new FormandoDao().listarTurma2(ComboBoxpesquisalocalidade7.getSelectedIndex()+1);
//
//            DefaultTableModel tbm = (DefaultTableModel) listadeformandoturma1.getModel();
//
//            for (int i = tbm.getRowCount() - 1; i >= 0; i--) {
//                tbm.removeRow(i);
//            }
//            int i = 0;
//            for (Formando f : formandos) {
//                tbm.addRow(new String[1]);
//
//                listadeformandoturma1.setValueAt(f.getIdlocalidade().getLocalidade(), i, 0);
//                listadeformandoturma1.setValueAt(f.getNome(), i, 1);
//                if (f.getSexo() == true) {
//                    listadeformandoturma1.setValueAt("Masculino", i, 2);
//                } else {
//                    listadeformandoturma1.setValueAt("Feminino", i, 2);
//                }
//    //                     listadeformando.setValueAt(f.getSexo(), i, 2);
//                listadeformandoturma1.setValueAt(f.getIdade(), i, 3);
//                listadeformandoturma1.setValueAt(f.getContacto(), i, 4);
//              //  listadeformando.setValueAt(f.getIdlocalidade().getIdposto().getIddistrito().getDistrito(), i, 5);
//                listadeformandoturma1.setValueAt(f.getIdcurso().getCurso(), i, 5);
//
//
//                i++;
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(GerirFormando.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//
//
//    }
}
